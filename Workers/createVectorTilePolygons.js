/**
 * @license
 * Cesium - https://github.com/CesiumGS/cesium
 * Version 1.114
 *
 * Copyright 2011-2022 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/CesiumGS/cesium/blob/main/LICENSE.md for full licensing details.
 */
import{a as R}from"./chunk-L5VPW2SR.js";import{a as It}from"./chunk-4A2FUNVR.js";import{a as M}from"./chunk-T5LTBJR6.js";import{a as bt}from"./chunk-4BEUQXNB.js";import"./chunk-LGDGOZBO.js";import"./chunk-KVLKTV7L.js";import"./chunk-ZWKNWN2X.js";import"./chunk-JXYWMXB6.js";import{a as W}from"./chunk-PDIF2AUE.js";import"./chunk-4NBDOIVA.js";import"./chunk-YIJHUUZY.js";import{c as z}from"./chunk-CSZ6CHXI.js";import"./chunk-XXK6IR5Y.js";import{a as o,b as nt,d as j}from"./chunk-IGBMENRT.js";import{a as et}from"./chunk-SEE54P6A.js";import"./chunk-JNX2URIY.js";import"./chunk-4Z3GDVJK.js";import"./chunk-LU3FCBPP.js";import"./chunk-S2577PU4.js";import{e as A}from"./chunk-2TPVVSVW.js";var kt=new o,Bt=new j,Nt=new z,E={min:void 0,max:void 0,indexBytesPerElement:void 0};function Pt(t){let e=new Float64Array(t),n=0;E.indexBytesPerElement=e[n++],E.min=e[n++],E.max=e[n++],o.unpack(e,n,kt),n+=o.packedLength,j.unpack(e,n,Bt),n+=j.packedLength,z.unpack(e,n,Nt)}function Tt(t){let e=t.length,n=0;for(let r=0;r<e;++r)n+=R.packedLength+3+t[r].batchIds.length;return n}function Ct(t,e,n){let r=e.length,o=2+r*M.packedLength+1+Tt(n),a=new Float64Array(o),i=0;a[i++]=t,a[i++]=r;for(let f=0;f<r;++f)M.pack(e[f],a,i),i+=M.packedLength;let s=n.length;a[i++]=s;for(let f=0;f<s;++f){let t=n[f];R.pack(t.color,a,i),i+=R.packedLength,a[i++]=t.offset,a[i++]=t.count;let e=t.batchIds,r=e.length;a[i++]=r;for(let n=0;n<r;++n)a[i++]=e[n]}return a}var yt=32767,wt=new o,Ht=new o,St=new o,Ut=new o,Ft=new o,Lt=new nt,Mt=new z;function Rt(t,e){let n;Pt(t.packedBuffer),n=2===E.indexBytesPerElement?new Uint16Array(t.indices):new Uint32Array(t.indices);let r=new Uint16Array(t.positions),a=new Uint32Array(t.counts),i=new Uint32Array(t.indexCounts),s=new Uint32Array(t.batchIds),f=new Uint32Array(t.batchTableColors),c=new Array(a.length),h=kt,l=Bt,u=Nt,m=E.min,p=E.max,d=t.minimumHeights,k=t.maximumHeights;A(d)&&A(k)&&(d=new Float32Array(d),k=new Float32Array(k));let I,g,w,b=r.length/2,y=r.subarray(0,b),N=r.subarray(b,2*b);bt.zigZagDeltaDecode(y,N);let L=new Float64Array(3*b);for(I=0;I<b;++I){let t=y[I],e=N[I],n=et.lerp(u.west,u.east,t/yt),r=et.lerp(u.south,u.north,e/yt),a=nt.fromRadians(n,r,0,Lt),i=l.cartographicToCartesian(a,wt);o.pack(i,L,3*I)}let j=a.length,T=new Array(j),x=new Array(j),U=0,B=0;for(I=0;I<j;++I)T[I]=U,x[I]=B,U+=a[I],B+=i[I];let P=new Float32Array(3*b*2),S=new Uint16Array(2*b),F=new Uint32Array(x.length),O=new Uint32Array(i.length),V=[],C={};for(I=0;I<j;++I)w=f[I],A(C[w])?(C[w].positionLength+=a[I],C[w].indexLength+=i[I],C[w].batchIds.push(I)):C[w]={positionLength:a[I],indexLength:i[I],offset:0,indexOffset:0,batchIds:[I]};let Y,G=0,D=0;for(w in C)if(C.hasOwnProperty(w)){Y=C[w],Y.offset=G,Y.indexOffset=D;let t=2*Y.positionLength,e=2*Y.indexLength+6*Y.positionLength;G+=t,D+=e,Y.indexLength=e}let X=[];for(w in C)C.hasOwnProperty(w)&&(Y=C[w],X.push({color:R.fromRgba(parseInt(w)),offset:Y.indexOffset,count:Y.indexLength,batchIds:Y.batchIds}));for(I=0;I<j;++I){w=f[I],Y=C[w];let t=Y.offset,e=3*t,r=t,b=T[I],y=a[I],N=s[I],E=m,j=p;A(d)&&A(k)&&(E=d[I],j=k[I]);let U=Number.POSITIVE_INFINITY,B=Number.NEGATIVE_INFINITY,R=Number.POSITIVE_INFINITY,G=Number.NEGATIVE_INFINITY;for(g=0;g<y;++g){let t=o.unpack(L,3*b+3*g,wt);l.scaleToGeodeticSurface(t,t);let n=l.cartesianToCartographic(t,Lt),a=n.latitude,i=n.longitude;U=Math.min(a,U),B=Math.max(a,B),R=Math.min(i,R),G=Math.max(i,G);let s=l.geodeticSurfaceNormal(t,Ht),f=o.multiplyByScalar(s,E,St),c=o.add(t,f,Ut);f=o.multiplyByScalar(s,j,f);let u=o.add(t,f,Ft);o.subtract(u,h,u),o.subtract(c,h,c),o.pack(u,P,e),o.pack(c,P,e+3),S[r]=N,S[r+1]=N,e+=6,r+=2}u=Mt,u.west=R,u.east=G,u.south=U,u.north=B,c[I]=M.fromRectangle(u,m,p,l);let W=Y.indexOffset,D=x[I],X=i[I];for(F[I]=W,g=0;g<X;g+=3){let e=n[D+g]-b,r=n[D+g+1]-b,o=n[D+g+2]-b;V[W++]=2*e+t,V[W++]=2*r+t,V[W++]=2*o+t,V[W++]=2*o+1+t,V[W++]=2*r+1+t,V[W++]=2*e+1+t}for(g=0;g<y;++g){let e=g,n=(g+1)%y;V[W++]=2*e+1+t,V[W++]=2*n+t,V[W++]=2*e+t,V[W++]=2*e+1+t,V[W++]=2*n+1+t,V[W++]=2*n+t}Y.offset+=2*y,Y.indexOffset=W,O[I]=W-F[I]}V=W.createTypedArray(P.length/3,V);let _=X.length;for(let o=0;o<_;++o){let t=X[o].batchIds,e=0,n=t.length;for(let r=0;r<n;++r)e+=O[t[r]];X[o].count=e}let H=2===V.BYTES_PER_ELEMENT?W.UNSIGNED_SHORT:W.UNSIGNED_INT,J=Ct(H,c,X);return e.push(P.buffer,V.buffer,F.buffer,O.buffer,S.buffer,J.buffer),{positions:P.buffer,indices:V.buffer,indexOffsets:F.buffer,indexCounts:O.buffer,batchIds:S.buffer,packedBuffer:J.buffer}}var Jt=It(Rt);export{Jt as default};