/**
 * @license
 * Cesium - https://github.com/CesiumGS/cesium
 * Version 1.114
 *
 * Copyright 2011-2022 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/CesiumGS/cesium/blob/main/LICENSE.md for full licensing details.
 */
import{a as Gt,b as Xt}from"./chunk-EC63IR4A.js";import{a as kt}from"./chunk-4A2FUNVR.js";import{a as lt}from"./chunk-IF5TQC34.js";import{a as Dt}from"./chunk-T5LTBJR6.js";import"./chunk-4BEUQXNB.js";import"./chunk-LGDGOZBO.js";import{a as qt}from"./chunk-KVLKTV7L.js";import"./chunk-ZWKNWN2X.js";import"./chunk-JXYWMXB6.js";import{d as zt,i as Lt}from"./chunk-4NBDOIVA.js";import"./chunk-YIJHUUZY.js";import{b as $,c as Ot}from"./chunk-CSZ6CHXI.js";import"./chunk-XXK6IR5Y.js";import{a as P,b as N,c as wt,d as Ht}from"./chunk-IGBMENRT.js";import{a as r}from"./chunk-SEE54P6A.js";import"./chunk-JNX2URIY.js";import{a as Vt}from"./chunk-4Z3GDVJK.js";import{a as Ut}from"./chunk-LU3FCBPP.js";import"./chunk-S2577PU4.js";import{e as ht}from"./chunk-2TPVVSVW.js";var te=Uint16Array.BYTES_PER_ELEMENT,mt=Int32Array.BYTES_PER_ELEMENT,Pt=Uint32Array.BYTES_PER_ELEMENT,ee=Float32Array.BYTES_PER_ELEMENT,H=Float64Array.BYTES_PER_ELEMENT;function tt(t,e,n){n=Ut(n,r);let i=t.length;for(let o=0;o<i;++o)if(n.equalsEpsilon(t[o],e,r.EPSILON12))return o;return-1}function oe(t,e){t.ellipsoid=Ht.clone(t.ellipsoid),t.rectangle=Ot.clone(t.rectangle);let n=se(t.buffer,t.relativeToCenter,t.ellipsoid,t.rectangle,t.nativeRectangle,t.exaggeration,t.exaggerationRelativeHeight,t.skirtHeight,t.includeWebMercatorT,t.negativeAltitudeExponentBias,t.negativeElevationThreshold),i=n.vertices;e.push(i.buffer);let r=n.indices;return e.push(r.buffer),{vertices:i.buffer,indices:r.buffer,numberOfAttributes:n.encoding.stride,minimumHeight:n.minimumHeight,maximumHeight:n.maximumHeight,boundingSphere3D:n.boundingSphere3D,orientedBoundingBox:n.orientedBoundingBox,occludeePointInScaledSpace:n.occludeePointInScaledSpace,encoding:n.encoding,vertexCountWithoutSkirts:n.vertexCountWithoutSkirts,indexCountWithoutSkirts:n.indexCountWithoutSkirts,westIndicesSouthToNorth:n.westIndicesSouthToNorth,southIndicesEastToWest:n.southIndicesEastToWest,eastIndicesNorthToSouth:n.eastIndicesNorthToSouth,northIndicesWestToEast:n.northIndicesWestToEast}}var u=new N,G=new P,ne=new P,ie=new P,re=new $;function se(t,e,n,i,o,a,s,l,h,c,m){let d,g,p,I,f,E;ht(i)?(d=i.west,g=i.south,p=i.east,I=i.north,f=i.width,E=i.height):(d=r.toRadians(o.west),g=r.toRadians(o.south),p=r.toRadians(o.east),I=r.toRadians(o.north),f=r.toRadians(i.width),E=r.toRadians(i.height));let T,x,S=[g,I],w=[d,p],k=Lt.eastNorthUpToFixedFrame(e,n),A=$.inverseTransformation(k,re);h&&(T=lt.geodeticLatitudeToMercatorAngle(g),x=1/(lt.geodeticLatitudeToMercatorAngle(I)-T));let B=1!==a,R=new DataView(t),b=Number.POSITIVE_INFINITY,y=Number.NEGATIVE_INFINITY,v=ne;v.x=Number.POSITIVE_INFINITY,v.y=Number.POSITIVE_INFINITY,v.z=Number.POSITIVE_INFINITY;let F=ie;F.x=Number.NEGATIVE_INFINITY,F.y=Number.NEGATIVE_INFINITY,F.z=Number.NEGATIVE_INFINITY;let M,_,U=0,V=0,j=0;for(_=0;_<4;++_){let t=U;M=R.getUint32(t,!0),t+=Pt;let e=r.toRadians(180*R.getFloat64(t,!0));t+=H,-1===tt(w,e)&&w.push(e);let n=r.toRadians(180*R.getFloat64(t,!0));t+=H,-1===tt(S,n)&&S.push(n),t+=2*H;let i=R.getInt32(t,!0);t+=mt,V+=i,i=R.getInt32(t,!0),j+=3*i,U+=M+Pt}let C=[],W=[],Y=new Array(V),L=new Array(V),O=new Array(V),X=h?new Array(V):[],D=B?new Array(V):[],z=new Array(j),J=[],K=[],Z=[],q=[],Q=0,et=0;for(U=0,_=0;_<4;++_){M=R.getUint32(U,!0),U+=Pt;let t=U,e=r.toRadians(180*R.getFloat64(U,!0));U+=H;let i=r.toRadians(180*R.getFloat64(U,!0));U+=H;let o=r.toRadians(180*R.getFloat64(U,!0)),a=.5*o;U+=H;let s=r.toRadians(180*R.getFloat64(U,!0)),l=.5*s;U+=H;let f=R.getInt32(U,!0);U+=mt;let E=R.getInt32(U,!0);U+=mt,U+=mt;let k=new Array(f);for(let H=0;H<f;++H){let t=e+R.getUint8(U++)*o;u.longitude=t;let f=i+R.getUint8(U++)*s;u.latitude=f;let E=R.getFloat32(U,!0);if(U+=ee,0!==E&&E<m&&(E*=-Math.pow(2,c)),E*=6371010,u.height=E,-1!==tt(w,t)||-1!==tt(S,f)){let t=tt(C,u,N);if(-1!==t){k[H]=W[t];continue}C.push(N.clone(u)),W.push(Q)}k[H]=Q,Math.abs(t-d)<a?J.push({index:Q,cartographic:N.clone(u)}):Math.abs(t-p)<a?Z.push({index:Q,cartographic:N.clone(u)}):Math.abs(f-g)<l?K.push({index:Q,cartographic:N.clone(u)}):Math.abs(f-I)<l&&q.push({index:Q,cartographic:N.clone(u)}),b=Math.min(E,b),y=Math.max(E,y),O[Q]=E;let M=n.cartographicToCartesian(u);if(Y[Q]=M,h&&(X[Q]=(lt.geodeticLatitudeToMercatorAngle(f)-T)*x),B){let t=n.geodeticSurfaceNormal(M);D[Q]=t}$.multiplyByPoint(A,M,G),P.minimumByComponent(G,v,v),P.maximumByComponent(G,F,F);let _=(t-d)/(p-d);_=r.clamp(_,0,1);let V=(f-g)/(I-g);V=r.clamp(V,0,1),L[Q]=new wt(_,V),++Q}let _=3*E;for(let n=0;n<_;++n,++et)z[et]=k[R.getUint16(U,!0)],U+=te;if(M!==U-t)throw new Vt("Invalid terrain tile.")}Y.length=Q,L.length=Q,O.length=Q,h&&(X.length=Q),B&&(D.length=Q);let nt=Q,it=et,rt={hMin:b,lastBorderPoint:void 0,skirtHeight:l,toENU:A,ellipsoid:n,minimum:v,maximum:F};J.sort((function(t,e){return e.cartographic.latitude-t.cartographic.latitude})),K.sort((function(t,e){return t.cartographic.longitude-e.cartographic.longitude})),Z.sort((function(t,e){return t.cartographic.latitude-e.cartographic.latitude})),q.sort((function(t,e){return e.cartographic.longitude-t.cartographic.longitude}));let ot=1e-5;if(gt(Y,O,L,X,D,z,rt,J,-ot*f,!0,-ot*E),gt(Y,O,L,X,D,z,rt,K,-ot*E,!1),gt(Y,O,L,X,D,z,rt,Z,ot*f,!0,ot*E),gt(Y,O,L,X,D,z,rt,q,ot*E,!1),J.length>0&&q.length>0){let t=J[0].index,e=nt,n=q[q.length-1].index,i=Y.length-1;z.push(n,i,e,e,t,n)}V=Y.length;let at,ut=zt.fromPoints(Y);ht(i)&&(at=Dt.fromRectangle(i,b,y,n));let st=new Gt(n).computeHorizonCullingPointPossiblyUnderEllipsoid(e,Y,b),ct=new qt(v,F,e),dt=new Xt(e,ct,rt.hMin,y,k,!1,h,B,a,s),pt=new Float32Array(V*dt.stride),It=0;for(let r=0;r<V;++r)It=dt.encode(pt,It,Y[r],L[r],O[r],void 0,X[r],D[r]);let Nt=J.map((function(t){return t.index})).reverse(),ft=K.map((function(t){return t.index})).reverse(),Et=Z.map((function(t){return t.index})).reverse(),Tt=q.map((function(t){return t.index})).reverse();return ft.unshift(Et[Et.length-1]),ft.push(Nt[0]),Tt.unshift(Nt[Nt.length-1]),Tt.push(Et[0]),{vertices:pt,indices:new Uint16Array(z),maximumHeight:y,minimumHeight:b,encoding:dt,boundingSphere3D:ut,orientedBoundingBox:at,occludeePointInScaledSpace:st,vertexCountWithoutSkirts:nt,indexCountWithoutSkirts:it,westIndicesSouthToNorth:Nt,southIndicesEastToWest:ft,eastIndicesNorthToSouth:Et,northIndicesWestToEast:Tt}}function gt(t,e,n,i,o,a,s,l,h,c,m){let d=l.length;for(let g=0;g<d;++g){let p=l[g],I=p.cartographic,f=p.index,E=t.length,T=I.longitude,x=I.latitude;x=r.clamp(x,-r.PI_OVER_TWO,r.PI_OVER_TWO);let S=I.height-s.skirtHeight;s.hMin=Math.min(s.hMin,S),N.fromRadians(T,x,S,u),c&&(u.longitude+=h),c?g===d-1?u.latitude+=m:0===g&&(u.latitude-=m):u.latitude+=h;let w=s.ellipsoid.cartographicToCartesian(u);t.push(w),e.push(S),n.push(wt.clone(n[f])),i.length>0&&i.push(i[f]),o.length>0&&o.push(o[f]),$.multiplyByPoint(s.toENU,w,G);let k=s.minimum,A=s.maximum;P.minimumByComponent(G,k,k),P.maximumByComponent(G,A,A);let B=s.lastBorderPoint;if(ht(B)){let t=B.index;a.push(t,E-1,E,E,f,t)}s.lastBorderPoint=p}}var Ae=kt(oe);export{Ae as default};