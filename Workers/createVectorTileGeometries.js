/**
 * @license
 * Cesium - https://github.com/CesiumGS/cesium
 * Version 1.114
 *
 * Copyright 2011-2022 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/CesiumGS/cesium/blob/main/LICENSE.md for full licensing details.
 */
import{a as P}from"./chunk-L5VPW2SR.js";import{a as z}from"./chunk-DC6GIZ7G.js";import"./chunk-KLT7JE6D.js";import{a as H}from"./chunk-7U7V3GY2.js";import{a as Y}from"./chunk-4A2FUNVR.js";import{a as j}from"./chunk-XNSTCKCH.js";import"./chunk-TB7RSGDN.js";import"./chunk-GNOHI6CF.js";import{a as W}from"./chunk-PDIF2AUE.js";import"./chunk-LIAARPDW.js";import"./chunk-PRRW7QSP.js";import{d as E}from"./chunk-4NBDOIVA.js";import"./chunk-YIJHUUZY.js";import{b as d}from"./chunk-CSZ6CHXI.js";import"./chunk-XXK6IR5Y.js";import{a as o}from"./chunk-IGBMENRT.js";import"./chunk-SEE54P6A.js";import"./chunk-JNX2URIY.js";import"./chunk-4Z3GDVJK.js";import"./chunk-LU3FCBPP.js";import"./chunk-S2577PU4.js";import{e as l}from"./chunk-2TPVVSVW.js";function X(e){this.offset=e.offset,this.count=e.count,this.color=e.color,this.batchIds=e.batchIds}var J=X,S=new o,$=d.packedLength+o.packedLength,ee=d.packedLength+2,ne=d.packedLength+o.packedLength,te=o.packedLength+1,u={modelMatrix:new d,boundingVolume:new E};function oe(e,t){let n=t*$,r=o.unpack(e,n,S);n+=o.packedLength;let i=d.unpack(e,n,u.modelMatrix);d.multiplyByScale(i,r,i);let s=u.boundingVolume;return o.clone(o.ZERO,s.center),s.radius=Math.sqrt(3),u}function ce(e,t){let n=t*ee,r=e[n++],i=e[n++],s=o.fromElements(r,r,i,S),a=d.unpack(e,n,u.modelMatrix);d.multiplyByScale(a,s,a);let l=u.boundingVolume;return o.clone(o.ZERO,l.center),l.radius=Math.sqrt(2),u}function se(e,t){let n=t*ne,r=o.unpack(e,n,S);n+=o.packedLength;let i=d.unpack(e,n,u.modelMatrix);d.multiplyByScale(i,r,i);let s=u.boundingVolume;return o.clone(o.ZERO,s.center),s.radius=1,u}function ie(e,t){let n=t*te,r=e[n++],i=o.unpack(e,n,S),s=d.fromTranslation(i,u.modelMatrix);d.multiplyByUniformScale(s,r,s);let a=u.boundingVolume;return o.clone(o.ZERO,a.center),a.radius=1,u}var de=new o;function R(e,t,n,r,i){if(!l(t))return;let s=n.length,a=r.attributes.position.values,c=r.indices,u=e.positions,f=e.vertexBatchIds,h=e.indices,p=e.batchIds,m=e.batchTableColors,b=e.batchedIndices,k=e.indexOffsets,g=e.indexCounts,I=e.boundingVolumes,y=e.modelMatrix,x=e.center,w=e.positionOffset,A=e.batchIdIndex,j=e.indexOffset,B=e.batchedIndicesOffset;for(let l=0;l<s;++l){let e=i(t,l),r=e.modelMatrix;d.multiply(y,r,r);let s=n[l],U=a.length;for(let t=0;t<U;t+=3){let e=o.unpack(a,t,de);d.multiplyByPoint(r,e,e),o.subtract(e,x,e),o.pack(e,u,3*w+t),f[A++]=s}let O=c.length;for(let t=0;t<O;++t)h[j+t]=c[t]+w;let R=l+B;b[R]=new J({offset:j,count:O,color:P.fromRgba(m[s]),batchIds:[s]}),p[R]=s,k[R]=j,g[R]=O,I[R]=E.transform(e.boundingVolume,r),w+=U/3,j+=O}e.positionOffset=w,e.batchIdIndex=A,e.indexOffset=j,e.batchedIndicesOffset+=s}var K=new o,Q=new d;function re(e){let t=new Float64Array(e),n=0;o.unpack(t,n,K),n+=o.packedLength,d.unpack(t,n,Q)}function le(e){let t=e.length,n=0;for(let o=0;o<t;++o)n+=P.packedLength+3+e[o].batchIds.length;return n}function ae(e,t,n){let o=n.length,r=2+o*E.packedLength+1+le(t),i=new Float64Array(r),s=0;i[s++]=e,i[s++]=o;for(let l=0;l<o;++l)E.pack(n[l],i,s),s+=E.packedLength;let a=t.length;i[s++]=a;for(let l=0;l<a;++l){let e=t[l];P.pack(e.color,i,s),s+=P.packedLength,i[s++]=e.offset,i[s++]=e.count;let n=e.batchIds,o=n.length;i[s++]=o;for(let t=0;t<o;++t)i[s++]=n[t]}return i}function fe(e,t){let n=l(e.boxes)?new Float32Array(e.boxes):void 0,o=l(e.boxBatchIds)?new Uint16Array(e.boxBatchIds):void 0,r=l(e.cylinders)?new Float32Array(e.cylinders):void 0,i=l(e.cylinderBatchIds)?new Uint16Array(e.cylinderBatchIds):void 0,s=l(e.ellipsoids)?new Float32Array(e.ellipsoids):void 0,a=l(e.ellipsoidBatchIds)?new Uint16Array(e.ellipsoidBatchIds):void 0,c=l(e.spheres)?new Float32Array(e.spheres):void 0,d=l(e.sphereBatchIds)?new Uint16Array(e.sphereBatchIds):void 0,u=l(n)?o.length:0,f=l(r)?i.length:0,h=l(s)?a.length:0,p=l(c)?d.length:0,m=j.getUnitBox(),b=z.getUnitCylinder(),k=H.getUnitEllipsoid(),g=m.attributes.position.values,I=b.attributes.position.values,y=k.attributes.position.values,x=g.length*u;x+=I.length*f,x+=y.length*(h+p);let w=m.indices,A=b.indices,B=k.indices,E=w.length*u;E+=A.length*f,E+=B.length*(h+p);let U=new Float32Array(x),O=new Uint16Array(x/3),v=W.createTypedArray(x/3,E),L=u+f+h+p,S=new Uint16Array(L),P=new Array(L),V=new Uint32Array(L),C=new Uint32Array(L),M=new Array(L);re(e.packedBuffer);let T={batchTableColors:new Uint32Array(e.batchTableColors),positions:U,vertexBatchIds:O,indices:v,batchIds:S,batchedIndices:P,indexOffsets:V,indexCounts:C,boundingVolumes:M,positionOffset:0,batchIdIndex:0,indexOffset:0,batchedIndicesOffset:0,modelMatrix:Q,center:K};R(T,n,o,m,oe),R(T,r,i,b,ce),R(T,s,a,k,se),R(T,c,d,k,ie);let F=ae(v.BYTES_PER_ELEMENT,P,M);return t.push(U.buffer,O.buffer,v.buffer),t.push(S.buffer,V.buffer,C.buffer),t.push(F.buffer),{positions:U.buffer,vertexBatchIds:O.buffer,indices:v.buffer,indexOffsets:V.buffer,indexCounts:C.buffer,batchIds:S.buffer,packedBuffer:F.buffer}}var Oe=Y(fe);export{Oe as default};